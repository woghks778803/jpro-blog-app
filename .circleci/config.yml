version: 2.1
orbs: 
  aws-eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-s3: circleci/aws-s3@3.0
jobs:
  docker-build:
    docker:
      - image: cimg/base:2022.02
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
      # - run:
      #     name: Dev Docker Image Bulid
      #     command: |
      #         docker build -t $DOCKER_HUB_ID/docker-jpro-blog-dev ./jpro-blog
      #         docker build -t $DOCKER_HUB_ID/docker-jpro-profile-dev ./jpro-profile
      #         docker build -t $DOCKER_HUB_ID/docker-jpro-nginx-dev ./nginx
      # - run:
      #     name: Dev Docker Image Testing
      #     command: |
      #       docker run -e CI=true $DOCKER_HUB_ID/docker-jpro-blog-dev [test script]
      - run:
          name: Op Docker Image Build
          command: |
            echo "Build Start"
            docker build -t $DOCKER_HUB_ID/docker-jpro-blog ./jpro-blog
            docker build -t $DOCKER_HUB_ID/docker-jpro-profile ./jpro-profile
            docker build -t $DOCKER_HUB_ID/docker-jpro-nginx ./nginx
      - run:
          name: Image DockerHub Push
          command: |
            echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_ID" --password-stdin
            docker push $DOCKER_HUB_ID/docker-jpro-blog
            docker push $DOCKER_HUB_ID/docker-jpro-profile
            docker push $DOCKER_HUB_ID/docker-jpro-nginx
  s3-upload:
    docker:
      - image: cimg/python:3.6
    steps:
      - checkout
      - run: mkdir bucket && echo "lorem ipsum" > bucket/upload_asset.txt
      - aws-s3/sync:
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: bucket
          to: $BUCKET_NAME_PATH
      - aws-s3/copy:
          arguments: '--dryrun'
          from: bucket/upload_asset.txt
          to: $BUCKET_NAME
  eb-demo:
    docker:
      - image: circleci/python:3.7.7
    steps:
      - checkout
      - run:
          name: installing aws dependencies
          command: |
            sudo pip install --upgrade setuptools
            sudo pip install awsebcli --upgrade
      - run:
          name: deploying
          command: |
            eb init --platform 'Jpro Service running on 64bit Amazon Linux 2' --region $AWS_REGION $EB_APP_NAME
            eb use $EB_ENV_NAME
            eb deploy $EB_ENV_NAME --message $CIRCLE_BUILD_NUM
workflows:
  docker-workflow:
    jobs:
      - docker-build:
          filters:
            branches:
              only: jpro
      - s3-upload:
          requires:
            - docker-build
          filters:
            branches:
              only: jpro
      - eb-demo:
          filters:
            branches:
              only:
                - jpro
          requires:
            - s3-upload